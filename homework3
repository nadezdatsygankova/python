#1.Пользователь вводит число, если оно четное - 
#выбрасываем исключение ValueError, если оно меньше 0 - TypeError, 
#если оно больше 10 - IndexError.
#Обрабатываем ошибку, говорим пользователю, в чем его ошибка

x= int(input())
try:
    if x % 2 == 0: 
        raise ValueError('You have ValueError')  
    if x < 0:
        raise TypeError('You have TypeError')
    if x > 10:
        raise IndexError('You have IndexError')
        
except ValueError as a:
    print(a)
except TypeError as a:
    print(a)
except IndexError as a:
    print(a)

#2.Создайте список произвольной длины. Пользователь должен 
#ввести индекс объекта, который хочет посмотреть. 
#Если все хорошо - пишите объект в консоль. 
#Если нет - обработайте возмозможные ошибки и скажите ему, 
#что не так

list = [1,5,7,8]

try:
    input_1 = int(input('Please, give me index of object'))
    if input_1 >= 0:
        if input_1 >= len (list):
            raise IndexError('No index')
    print(list[input_1])       
except IndexError:
    print('No index')
except ValueError:
    print('Wrong index')  
    
  **Задачи на закрепление функций:
1.Написать функцию, которая принимает на вход два аргумента. Если аргументы больше нуля, 
возвращаем их сумму. Если оба меньше - разность. Если знаки разные - возвращаем 0
def my_function(x, y):
    if x > 0 and y > 0:
        print (x+y)
    if x < 0 and y < 0:
        print(x-y)
    if (x > 0 and y < 0) or (y > 0 and x < 0):
        print('0')
        
print(my_function(int(input()), int(input())))

2.Написать функцию, которая принимает 3 аргумента - числа, найти среди них два максимальных, вывести в консоль

def new_function(x,y,z):
    if x > y or x > z:
         print(x)
    if y > z or y > x:
         print (y)
    if z > x or z > y:
        print(z)
print(new_function(int(input()), int(input()), int(input())))      

3.Написать функцию, которая принимает два аргумента.
Первый - список чисел, второй - булевый флаг. 
Если флаг действителен - возвращаем новый список с нечетными числами из входного списка,
если флаг отрицателен - возвращаем новый список с четными числами из входного списка
def flag_new(flag,*arg_1):
    list_1 =[]
    list_2 =[]
    for i in arg_1:
        if i%2 == 0:
            list_1.append(i)        
        else:
            list_2.append(i)
    if flag == True:
        return list_2
    else: 
        return list_1
        
print(flag_new(True, *[5,8,7,96]))
print(flag_new(False, *[2,8,7,5]))

**Задачи на закрепление типов аргументов:
1.Написать функцию, которая принимает любое количество аргументов чисел.
Среди них она находит максимальное и минимальное. И возвращает оба

def func_1(*numbers):
    lst = [i for i in numbers]
    lst.sort()
    print('Min', lst[0], '\nMax', lst[len(lst)-1])

func_1(5,8,9,-4,2,7,6)


        
    
    
    
    
    
   
   
